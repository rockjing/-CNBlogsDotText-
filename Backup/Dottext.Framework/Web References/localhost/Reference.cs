//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 1.1.4322.573 版自动生成。
// 
namespace Dottext.Framework.localhost {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SBS (Simple Blog Service)Soap", Namespace="http://www.aspnetweblog.com/services/simpleblogservice/")]
    public class SBSSimpleBlogService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public SBSSimpleBlogService() {
            this.Url = "http://localhost/Services/SimpleBlogService.asmx";
        }

		public SBSSimpleBlogService(string url) 
		{
			this.Url = url;
		}
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.aspnetweblog.com/services/simpleblogservice/InsertCategoryPost", RequestNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", ResponseNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertCategoryPost(string username, string password, System.DateTime postdate, string title, string body, string[] categories) {
            object[] results = this.Invoke("InsertCategoryPost", new object[] {
                        username,
                        password,
                        postdate,
                        title,
                        body,
                        categories});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertCategoryPost(string username, string password, System.DateTime postdate, string title, string body, string[] categories, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertCategoryPost", new object[] {
                        username,
                        password,
                        postdate,
                        title,
                        body,
                        categories}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndInsertCategoryPost(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="InsertCategoryPost1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.aspnetweblog.com/services/simpleblogservice/InsertCategoryPostWithUrl", RequestElementName="InsertCategoryPostWithUrl", RequestNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", ResponseElementName="InsertCategoryPostWithUrlResponse", ResponseNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("InsertCategoryPostWithUrlResult")]
        public int InsertCategoryPost(string username, string password, System.DateTime postdate, string title, string body, string url, string[] categories) {
            object[] results = this.Invoke("InsertCategoryPost1", new object[] {
                        username,
                        password,
                        postdate,
                        title,
                        body,
                        url,
                        categories});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertCategoryPost1(string username, string password, System.DateTime postdate, string title, string body, string url, string[] categories, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertCategoryPost1", new object[] {
                        username,
                        password,
                        postdate,
                        title,
                        body,
                        url,
                        categories}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndInsertCategoryPost1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.aspnetweblog.com/services/simpleblogservice/SimplePost", RequestElementName="SimplePost", RequestNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", ResponseElementName="SimplePostResponse", ResponseNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SimplePostResult")]
        public int InsertPost(string username, string password, System.DateTime postdate, string title, string body) {
            object[] results = this.Invoke("InsertPost", new object[] {
                        username,
                        password,
                        postdate,
                        title,
                        body});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertPost(string username, string password, System.DateTime postdate, string title, string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertPost", new object[] {
                        username,
                        password,
                        postdate,
                        title,
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndInsertPost(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="InsertPost1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.aspnetweblog.com/services/simpleblogservice/SimplePostUrl", RequestElementName="SimplePostUrl", RequestNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", ResponseElementName="SimplePostUrlResponse", ResponseNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SimplePostUrlResult")]
        public int InsertPost(string username, string password, System.DateTime postdate, string title, string body, string url) {
            object[] results = this.Invoke("InsertPost1", new object[] {
                        username,
                        password,
                        postdate,
                        title,
                        body,
                        url});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertPost1(string username, string password, System.DateTime postdate, string title, string body, string url, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertPost1", new object[] {
                        username,
                        password,
                        postdate,
                        title,
                        body,
                        url}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndInsertPost1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.aspnetweblog.com/services/simpleblogservice/SimpleEntryUpdateUrl", RequestElementName="SimpleEntryUpdateUrl", RequestNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", ResponseElementName="SimpleEntryUpdateUrlResponse", ResponseNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SimpleEntryUpdateUrlResult")]
        public bool Edit(int entryid, string username, string password, System.DateTime postupdate, string title, string body, string url) {
            object[] results = this.Invoke("Edit", new object[] {
                        entryid,
                        username,
                        password,
                        postupdate,
                        title,
                        body,
                        url});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEdit(int entryid, string username, string password, System.DateTime postupdate, string title, string body, string url, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Edit", new object[] {
                        entryid,
                        username,
                        password,
                        postupdate,
                        title,
                        body,
                        url}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndEdit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="Edit1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.aspnetweblog.com/services/simpleblogservice/SimpleEntryUpdate", RequestElementName="SimpleEntryUpdate", RequestNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", ResponseElementName="SimpleEntryUpdateResponse", ResponseNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SimpleEntryUpdateResult")]
        public bool Edit(int entryid, string username, string password, System.DateTime postupdate, string title, string body) {
            object[] results = this.Invoke("Edit1", new object[] {
                        entryid,
                        username,
                        password,
                        postupdate,
                        title,
                        body});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEdit1(int entryid, string username, string password, System.DateTime postupdate, string title, string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Edit1", new object[] {
                        entryid,
                        username,
                        password,
                        postupdate,
                        title,
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndEdit1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.aspnetweblog.com/services/simpleblogservice/GetCategories", RequestNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", ResponseNamespace="http://www.aspnetweblog.com/services/simpleblogservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCategories(string username, string password) {
            object[] results = this.Invoke("GetCategories", new object[] {
                        username,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCategories(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCategories", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetCategories(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
    }
}
